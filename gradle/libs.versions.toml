[versions]

kotlin = "2.0.10-RC"
ktor = "3.0.0-beta-2" # 3.0.0-beta-2
klogging = "0.6.1"
coroutines = "1.9.0-RC"
serializationJson = "1.7.1"
mongoDB = "5.1.1"
updateVersions = "0.51.0"
crypto = "0.2.0"
datetime = "0.6.0"
cache = "2.1.0"
minestom = "1f34e60ea6"
kaml = "0.60.0"
minestomCoroutines = "2.18.0"
polar = "dev" #"1.10.0"

[libraries]

other-klogging-slf4j = { module = "io.klogging:slf4j-klogging", version.ref = "klogging" }
other-cache = { module = "com.mayakapps.kache:kache", version.ref = "cache" }
other-cache-file = { module = "com.mayakapps.kache:file-kache", version.ref = "cache" }
other-kaml = { module = "com.charleskorn.kaml:kaml", version.ref = "kaml" }
other-polar = { module = "dev.hollowcube:polar", version.ref = "polar" }
other-minestomCoroutines-api = { module = "com.github.shynixn.mccoroutine:mccoroutine-minestom-api", version.ref = "minestomCoroutines" }
other-minestomCoroutines-core = { module = "com.github.shynixn.mccoroutine:mccoroutine-minestom-core", version.ref = "minestomCoroutines" }
minestom = { module = "net.minestom:minestom-snapshots", version.ref = "minestom" }
other-mongodb = { module = "org.mongodb:mongodb-driver-kotlin-coroutine", version.ref = "mongoDB" }
other-crypto = { module = "com.diglol.crypto:crypto", version.ref = "crypto" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "datetime" }
kotlinx-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json-io", version.ref = "serializationJson" }

kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }

ktor-serialization-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }

ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }

[plugins]

kotlinMultiplatform = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
ktor = { id = "io.ktor.plugin", version.ref = "ktor" }
kotlinSerialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
updateDeps = { id = "com.github.ben-manes.versions", version.ref = "updateVersions" }